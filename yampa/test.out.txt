{-

Haskell/Yampa code for model foobar

Generated by Frabjous, developed at the University of Saskatchewan by
	Oliver Schneider,
	Christopher Dutchyn,
	Nathaniel Osgood

-}

{-# LANGUAGE Arrows #-}

module Model_foobar where

import Frabjous
import FRP.Yampa


-- network definitions

data Network =	Network_net
		| Network_net2
	deriving(Show, Eq)


-- data definition for diagrams

data Diagram_diag1 =	State_diag1_s1
			| State_diag1_s2
	deriving(Show, Eq)

data Diagram_diag2 =	State_diag2_r1
			| State_diag2_r2
	deriving(Show, Eq)

data Diagram_diag3 =	State_diag3_h1
	deriving(Show, Eq)



-- state definitions for diagram diag1
diagram_diag1 = state_diag1_s1

state_diag1_s1 = state output transitions
	where
		output = State_diag1_s1
		transitions = transition1 `lmerge` transition2
		transition1 = rate 0.3 state_diag1_s1
		transition2 = timeout 1.0 state_diag1_s1

state_diag1_s2 = state output transitions
	where
		output = State_diag1_s2
		transitions = never -- no transitions from this state


-- state definitions for diagram diag2
diagram_diag2 = state_diag2_r1

state_diag2_r1 = state output transitions
	where
		output = State_diag2_r1
		transitions = transition1
		transition1 = timeout 10.0 state_diag2_r1

state_diag2_r2 = state output transitions
	where
		output = State_diag2_r2
		transitions = transition1
		transition1 = rate 0.1 state_diag2_r2


-- state definitions for diagram diag3
diagram_diag3 = state_diag3_h1

state_diag3_h1 = state output transitions
	where
		output = State_diag3_h1
		transitions = never -- no transitions from this state



